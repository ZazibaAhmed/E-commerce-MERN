[{"D:\\Projects\\ProShop\\frontend\\src\\index.js":"1","D:\\Projects\\ProShop\\frontend\\src\\App.js":"2","D:\\Projects\\ProShop\\frontend\\src\\reportWebVitals.js":"3","D:\\Projects\\ProShop\\frontend\\src\\components\\Footer.js":"4","D:\\Projects\\ProShop\\frontend\\src\\components\\Header.js":"5","D:\\Projects\\ProShop\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\Projects\\ProShop\\frontend\\src\\components\\Product.js":"7","D:\\Projects\\ProShop\\frontend\\src\\components\\Rating.js":"8","D:\\Projects\\ProShop\\frontend\\src\\screens\\ProductScreen.js":"9","D:\\Projects\\ProShop\\frontend\\src\\store.js":"10","D:\\Projects\\ProShop\\frontend\\src\\reducers\\productReducers.js":"11","D:\\Projects\\ProShop\\frontend\\src\\constants\\productConstants.js":"12","D:\\Projects\\ProShop\\frontend\\src\\actions\\productActions.js":"13","D:\\Projects\\ProShop\\frontend\\src\\components\\Message.js":"14","D:\\Projects\\ProShop\\frontend\\src\\components\\Loader.js":"15","D:\\Projects\\ProShop\\frontend\\src\\screens\\CartScreen.js":"16","D:\\Projects\\ProShop\\frontend\\src\\reducers\\cartReducers.js":"17","D:\\Projects\\ProShop\\frontend\\src\\constants\\cartConstants.js":"18","D:\\Projects\\ProShop\\frontend\\src\\actions\\cartActions.js":"19","D:\\Projects\\ProShop\\frontend\\src\\reducers\\userReducers.js":"20","D:\\Projects\\ProShop\\frontend\\src\\constants\\userConstants.js":"21","D:\\Projects\\ProShop\\frontend\\src\\screens\\LoginScreen.js":"22","D:\\Projects\\ProShop\\frontend\\src\\components\\FormContainer.js":"23","D:\\Projects\\ProShop\\frontend\\src\\actions\\userActions.js":"24","D:\\Projects\\ProShop\\frontend\\src\\screens\\RegisterScreen.js":"25","D:\\Projects\\ProShop\\frontend\\src\\screens\\ProfileScreen.js":"26","D:\\Projects\\ProShop\\frontend\\src\\screens\\ShippingScreen.js":"27","D:\\Projects\\ProShop\\frontend\\src\\components\\CheckoutSteps.js":"28","D:\\Projects\\ProShop\\frontend\\src\\screens\\PaymentScreen.js":"29","D:\\Projects\\ProShop\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","D:\\Projects\\ProShop\\frontend\\src\\actions\\orderActions.js":"31","D:\\Projects\\ProShop\\frontend\\src\\constants\\orderConstants.js":"32","D:\\Projects\\ProShop\\frontend\\src\\reducers\\orderReducers.js":"33","D:\\Projects\\ProShop\\frontend\\src\\screens\\OrderScreen.js":"34","D:\\Projects\\ProShop\\frontend\\src\\screens\\UserListScreen.js":"35","D:\\Projects\\ProShop\\frontend\\src\\screens\\UserEditScreen.js":"36","D:\\Projects\\ProShop\\frontend\\src\\screens\\ProductListScreen.js":"37","D:\\Projects\\ProShop\\frontend\\src\\screens\\ProductEditScreen.js":"38","D:\\Projects\\ProShop\\frontend\\src\\screens\\OrderListScreen.js":"39","D:\\Projects\\ProShop\\frontend\\src\\components\\SearchBox.js":"40","D:\\Projects\\ProShop\\frontend\\src\\components\\Paginate.js":"41","D:\\Projects\\ProShop\\frontend\\src\\components\\ProductCarousel.js":"42","D:\\Projects\\ProShop\\frontend\\src\\components\\Meta.js":"43"},{"size":594,"mtime":1609656472563,"results":"44","hashOfConfig":"45"},{"size":2747,"mtime":1616525025800,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"45"},{"size":427,"mtime":1609513167728,"results":"48","hashOfConfig":"45"},{"size":2754,"mtime":1616520088708,"results":"49","hashOfConfig":"45"},{"size":2321,"mtime":1616606005996,"results":"50","hashOfConfig":"45"},{"size":1152,"mtime":1609525053400,"results":"51","hashOfConfig":"45"},{"size":2271,"mtime":1609570164504,"results":"52","hashOfConfig":"45"},{"size":8463,"mtime":1616435537858,"results":"53","hashOfConfig":"45"},{"size":2859,"mtime":1616602090037,"results":"54","hashOfConfig":"45"},{"size":4499,"mtime":1616601945289,"results":"55","hashOfConfig":"45"},{"size":1550,"mtime":1616432980516,"results":"56","hashOfConfig":"45"},{"size":6723,"mtime":1616602980125,"results":"57","hashOfConfig":"45"},{"size":296,"mtime":1609669530230,"results":"58","hashOfConfig":"45"},{"size":366,"mtime":1609669226575,"results":"59","hashOfConfig":"45"},{"size":4668,"mtime":1609877127830,"results":"60","hashOfConfig":"45"},{"size":1577,"mtime":1610434636675,"results":"61","hashOfConfig":"45"},{"size":236,"mtime":1610106724536,"results":"62","hashOfConfig":"45"},{"size":1664,"mtime":1610204815727,"results":"63","hashOfConfig":"45"},{"size":3983,"mtime":1610737970003,"results":"64","hashOfConfig":"45"},{"size":1510,"mtime":1610718309038,"results":"65","hashOfConfig":"45"},{"size":2646,"mtime":1609877431149,"results":"66","hashOfConfig":"45"},{"size":368,"mtime":1609876189851,"results":"67","hashOfConfig":"45"},{"size":8431,"mtime":1610738191780,"results":"68","hashOfConfig":"45"},{"size":3878,"mtime":1610041771399,"results":"69","hashOfConfig":"45"},{"size":6750,"mtime":1610648232418,"results":"70","hashOfConfig":"45"},{"size":2932,"mtime":1610106031883,"results":"71","hashOfConfig":"45"},{"size":1664,"mtime":1610105940746,"results":"72","hashOfConfig":"45"},{"size":2084,"mtime":1610107107560,"results":"73","hashOfConfig":"45"},{"size":5502,"mtime":1610436410677,"results":"74","hashOfConfig":"45"},{"size":6089,"mtime":1616259754728,"results":"75","hashOfConfig":"45"},{"size":1286,"mtime":1616259483116,"results":"76","hashOfConfig":"45"},{"size":3528,"mtime":1616259614700,"results":"77","hashOfConfig":"45"},{"size":8034,"mtime":1616265800676,"results":"78","hashOfConfig":"45"},{"size":2892,"mtime":1610731328224,"results":"79","hashOfConfig":"45"},{"size":3277,"mtime":1610738607102,"results":"80","hashOfConfig":"45"},{"size":4180,"mtime":1616524547695,"results":"81","hashOfConfig":"45"},{"size":6199,"mtime":1616258047725,"results":"82","hashOfConfig":"45"},{"size":2587,"mtime":1616260024315,"results":"83","hashOfConfig":"45"},{"size":794,"mtime":1616519335467,"results":"84","hashOfConfig":"45"},{"size":784,"mtime":1616523303479,"results":"85","hashOfConfig":"45"},{"size":1266,"mtime":1616602537684,"results":"86","hashOfConfig":"45"},{"size":174,"mtime":1616606003919,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1xx5i1g",{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\ProShop\\frontend\\src\\index.js",[],["181","182"],"D:\\Projects\\ProShop\\frontend\\src\\App.js",["183"],"import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n            exact\n          />\n          <Route path=\"/\" exact component={HomeScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","D:\\Projects\\ProShop\\frontend\\src\\reportWebVitals.js",[],"D:\\Projects\\ProShop\\frontend\\src\\components\\Footer.js",[],"D:\\Projects\\ProShop\\frontend\\src\\components\\Header.js",["184","185"],"import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  //Destructuring parts of the state that could be sent down from reducer\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>ProShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart mr-1\"></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user mr-1\"></i>Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Projects\\ProShop\\frontend\\src\\screens\\HomeScreen.js",["186"],"D:\\Projects\\ProShop\\frontend\\src\\components\\Product.js",[],"D:\\Projects\\ProShop\\frontend\\src\\components\\Rating.js",["187"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({value,text,color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={ \r\n                        value>=1 \r\n                        ? 'fas fa-star'\r\n                        : value>= 0.5 \r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={ \r\n                        value>=2 \r\n                        ? 'fas fa-star'\r\n                        : value>= 1.5 \r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={ \r\n                        value>=3 \r\n                        ? 'fas fa-star'\r\n                        : value>= 2.5 \r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={ \r\n                        value>=4 \r\n                        ? 'fas fa-star'\r\n                        : value>= 3.5 \r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={ \r\n                        value>=5 \r\n                        ? 'fas fa-star'\r\n                        : value>= 4.5 \r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f82825'\r\n}\r\n\r\n// Rating.propTypes = {\r\n//     value: PropTypes.number.isRequired,\r\n//     text: PropTypes.string.isRequired,\r\n//     color: PropTypes.string\r\n// }\r\n\r\nexport default Rating\r\n","D:\\Projects\\ProShop\\frontend\\src\\screens\\ProductScreen.js",["188"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\n//Destructuring the props we get from route\r\n//history to redirect\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  //------------OLD WAY---------------\r\n  // const [product, setProduct] = useState({})\r\n  // useEffect( () => {\r\n  //     const fetchProduct = async () => {\r\n  //         const response = await axios.get(`/api/products/${match.params.id}`)\r\n  //         setProduct(response.data)\r\n  //     }\r\n  //     fetchProduct()\r\n  // }, [match])\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id));\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    //Redirecting to cart\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\" exact>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>{product.name}</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    color=\"orange\"\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: {product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price: </Col>\r\n                      <Col>\r\n                        <strong>{product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status: </Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Quantity</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant=\"success\">\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","D:\\Projects\\ProShop\\frontend\\src\\store.js",[],"D:\\Projects\\ProShop\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Projects\\ProShop\\frontend\\src\\constants\\productConstants.js",[],"D:\\Projects\\ProShop\\frontend\\src\\actions\\productActions.js",[],"D:\\Projects\\ProShop\\frontend\\src\\components\\Message.js",[],"D:\\Projects\\ProShop\\frontend\\src\\components\\Loader.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\CartScreen.js",["189"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Card, Button, ListGroup, Image, Form} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n//location to get query string\r\n//history to redirect\r\nconst CartScreen = ({match, location, history }) => {\r\n\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    // console.log(qty)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector( state => state.cart)\r\n    const { cartItems } = cart\r\n    // console.log(cartItems)\r\n     \r\n    //We only want to dispatch if there's a product id\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch( addToCart(productId, qty) )\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler= (id) => {\r\n       dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler= (id) => {\r\n        //We'll redirect to login unless it has a query string of redirect set to shipping\r\n        history.push('/login?redirect=shipping')\r\n        console.log('checkout')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length === 0 ? (\r\n                <Message>\r\n                    Your cart is empty <Link to='/'>Go Back</Link>\r\n                </Message>\r\n            ) : (\r\n                <ListGroup variant='flush'>\r\n                    {cartItems.map( item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n                                <Col md={2}>${item.price}</Col>\r\n                                <Col md={2}>\r\n                                    <Form.Control\r\n                                        as='select'\r\n                                        value={item.qty}\r\n                                        onChange={(e) =>\r\n                                            dispatch(addToCart(item.product, Number(e.target.value)))\r\n                                        }\r\n                                        >\r\n                                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                                            <option key={x + 1} value={x + 1}>\r\n                                            {x + 1}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <Button\r\n                                        type='button'\r\n                                        variant='light'\r\n                                        onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n            )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                <h2>\r\n                    Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                    items\r\n                </h2>\r\n                $\r\n                {cartItems\r\n                    .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                    .toFixed(2)} \r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                <Button\r\n                    type='button'\r\n                    className='btn-block'\r\n                    disabled={cartItems.length === 0}\r\n                    onClick={checkoutHandler}\r\n                >\r\n                    Proceed To Checkout\r\n                </Button>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n            </Card>\r\n    \r\n            </Col>\r\n       </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","D:\\Projects\\ProShop\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Projects\\ProShop\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Projects\\ProShop\\frontend\\src\\actions\\cartActions.js",[],"D:\\Projects\\ProShop\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Projects\\ProShop\\frontend\\src\\constants\\userConstants.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Projects\\ProShop\\frontend\\src\\components\\FormContainer.js",[],"D:\\Projects\\ProShop\\frontend\\src\\actions\\userActions.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\Projects\\ProShop\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\Projects\\ProShop\\frontend\\src\\actions\\orderActions.js",[],"D:\\Projects\\ProShop\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Projects\\ProShop\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\OrderScreen.js",["190"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, Image, Card, ListGroup } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"./../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  //Renaming them. We can rename like this\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      //Fetching clident id from backend\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      console.log(clientId);\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true; //making it asynchornous\r\n      script.onload = () => {\r\n        setSdkReady(true); //tells us if script has been loaded\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      //it will load the order again but it should be paid\r\n      dispatch({ type: ORDER_PAY_RESET }); //otherwise will be stuck in a loop\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      // We want to check to see if it's not paid\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n\r\n    if (!order || order._id !== orderId) {\r\n      dispatch(getOrderDetails(orderId));\r\n    }\r\n  }, [dispatch, order, orderId, successPay, successDeliver]);\r\n\r\n  //Payment result comes from paypal\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h2>Order {order._id}</h2>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode}{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","D:\\Projects\\ProShop\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\UserEditScreen.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\Projects\\ProShop\\frontend\\src\\screens\\OrderListScreen.js",[],"D:\\Projects\\ProShop\\frontend\\src\\components\\SearchBox.js",[],"D:\\Projects\\ProShop\\frontend\\src\\components\\Paginate.js",[],"D:\\Projects\\ProShop\\frontend\\src\\components\\ProductCarousel.js",[],"D:\\Projects\\ProShop\\frontend\\src\\components\\Meta.js",["191"],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"200","line":15,"column":11,"nodeType":"198","messageId":"199","endLine":15,"endColumn":18},{"ruleId":"196","severity":1,"message":"201","line":15,"column":20,"nodeType":"198","messageId":"199","endLine":15,"endColumn":25},{"ruleId":"196","severity":1,"message":"202","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":12},{"ruleId":"196","severity":1,"message":"203","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":63,"column":6,"nodeType":"206","endLine":63,"endColumn":45,"suggestions":"207"},{"ruleId":"196","severity":1,"message":"197","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":24},{"ruleId":"204","severity":1,"message":"208","line":86,"column":6,"nodeType":"206","endLine":86,"endColumn":60,"suggestions":"209"},{"ruleId":null,"fatal":true,"severity":2,"message":"210","line":7,"column":5},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'Meta' is defined but never used.","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product._id'. Either include it or remove the dependency array.","ArrayExpression",["213"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["214"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 | \u001b[39m    \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m       \u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m    )\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mdefault\u001b[39m \u001b[33mMeta\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [dispatch, match, product._id, successProductReview]",{"range":"219","text":"220"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"221","text":"222"},[1932,1971],"[dispatch, match, product._id, successProductReview]",[2826,2880],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]"]